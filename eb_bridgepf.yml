# This CF script is for creating an AWS BridgePF environment. The environment will
# get added to the stack that is passed into the AWS CLI (i.e. --stack-name)
# usage:
#   aws cloudformation update-stack --stack-name Sandbox \
#     --template-url $S3_BUCKET_URL
Outputs:
  AWSEBEnvironmentInfo:
    Description: Environment string of EB to deploy into
    Value: !Ref AWSEBEnvironment
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  IAMUserPassword:
    Type: String
    Description: IAM user login password
    NoEcho: true
    MinLength: '3'
    MaxLength: '50'
    Default: param_place_holder
  AWSEBEnvironmentName:
    Type: String
    Description: The Elastic Beanstalk environment name
    Default: param_place_holder
  SSLCertArn:
    Description: SSL certificate for load balancer
    Type: String
    Default: param_place_holder
  BridgeEnv:
    Type: String
    Default: param_place_holder
  BridgeUser:
    Type: String
    Default: param_place_holder
  InstanceType:
    Type: String
    Description: Instance type to use for Elastic Beanstalk Instances
    Default: t2.nano
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - cr1.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - cc1.4xlarge
      - cc2.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - cg1.4xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - f1.2xlarge
      - f1.16xlarge
  UploadBucket:
    Type: String
    Default: param_place_holder
  AttachmentBucket:
    Type: String
    Default: param_place_holder
  UploadCmsCertBucket:
    Type: String
    Default: param_place_holder
  UploadCmsPrivBucket:
    Type: String
    Default: param_place_holder
  ConsentsBucket:
    Type: String
    Default: param_place_holder
  AppDeployBucket:
    Type: String
    Description: S3 bucket for deployment
    Default: param_place_holder
  AppDeployFile:
    Type: String
    Description: Initial file to deploy to elastic beanstalk from s3 bucket
    Default: param_place_holder
  DNSHostname:
    Type: String
    Description: DNS Hostname for deployment
    Default: param_place_holder
  DNSDomain:
    Type: String
    Description: DNS Domain name for deployment
    Default: param_place_holder
  AwsEbNotificationEndpoint:
    Type: String
    Description: Email address for AWS EB notifications
    Default: param_place_holder
    NoEcho: true
  AppHealthcheckUrl:
    Type: String
    Description: The AWS EB health check path
    Default: 'HTTP:80/?study=api'
  AwsKey:
    Type: String
    Default: param_place_holder
  AwsSecretKey:
    Type: String
    Default: param_place_holder
    NoEcho: true
  AwsSecretKeyConsents:
    Type: String
    Default: param_place_holder
    NoEcho: true
  AwsKeyUpload:
    Type: String
    Default: param_place_holder
  AwsSecretKeyUpload:
    Type: String
    Default: param_place_holder
    NoEcho: true
  AwsKeyUploadCms:
    Type: String
    Default: param_place_holder
  AwsSecretKeyUploadCms:
    Type: String
    Default: param_place_holder
    NoEcho: true
  EnterpriseStormpathHref:
    Type: String
    Default: param_place_holder
  EnterpriseStormpathId:
    Type: String
    Default: param_place_holder
  EnterpriseStormpathSecret:
    Type: String
    Default: param_place_holder
    NoEcho: true
  HibernateConnectionPassword:
    Type: String
    Default: param_place_holder
    NoEcho: true
  HibernateConnectionUrl:
    Type: String
    Default: param_place_holder
  HibernateConnectionUsername:
    Type: String
    Default: param_place_holder
  HibernateConnectionUsessl:
    Type: String
    Default: param_place_holder
  RedisUrl:
    Type: String
    Default: param_place_holder
  BridgeHealthcodeKey:
    Type: String
    Default: param_place_holder
    NoEcho: true
  BridgeHealthcodeRedisKey:
    Type: String
    Default: param_place_holder
    NoEcho: true
  WebservicesUrl:
    Type: String
    Default: param_place_holder
  HostPostfix:
    Type: String
    Default: param_place_holder
  JavaOpts:
    Type: String
    Default: param_place_holder
  NewRelicAppName:
    Type: String
    Default: param_place_holder
  NewRelicLicenseKey:
    Type: String
    Default: param_place_holder
    NoEcho: true
  NewRelicLog:
    Type: String
    Default: param_place_holder
  EmailUnsubscribeToken:
    Type: String
    Default: param_place_holder
  AuthCreateMysqlAccounts:
    Type: String
    Default: param_place_holder
  AuthProvider:
    Type: String
    Default: param_place_holder
  AwsSnsKey:
    Type: String
    Default: param_place_holder
  AwsSnsSecretKey:
    Type: String
    NoEcho: true
    Default: param_place_holder
  SynapseApiKey:
    Type: String
    Default: param_place_holder
  SynapseUser:
    Type: String
    Default: param_place_holder
  SysopsEmail:
    Type: String
    Default: param_place_holder
Resources:
  AWSS3UploadBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref UploadBucket
  AWSS3UploadBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: Give access to user
        Statement:
          - Sid: AllAccess
            Action:
              - 's3:*'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref AWSS3UploadBucket
            Principal:
              AWS: !GetAtt
                - AWSIAMS3User
                - Arn
      Bucket: !Ref AWSS3UploadBucket
  AWSS3AttachmentBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref AttachmentBucket
  AWSS3AttachmentBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: Give access to user
        Statement:
          - Sid: AllAccess
            Action:
              - 's3:*'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref AWSS3AttachmentBucket
            Principal:
              AWS: !GetAtt
                - AWSIAMS3User
                - Arn
      Bucket: !Ref AWSS3AttachmentBucket
  AWSS3UploadCmsCertBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref UploadCmsCertBucket
  AWSS3UploadCmsCertBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: Give access to user
        Statement:
          - Sid: AllAccess
            Action:
              - 's3:*'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref AWSS3UploadCmsCertBucket
            Principal:
              AWS: !GetAtt
                - AWSIAMS3User
                - Arn
      Bucket: !Ref AWSS3UploadCmsCertBucket
  AWSS3UploadCmsPrivBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref UploadCmsPrivBucket
  AWSS3UploadCmsPrivBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: Give access to user
        Statement:
          - Sid: AllAccess
            Action:
              - 's3:*'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref AWSS3UploadCmsPrivBucket
            Principal:
              AWS: !GetAtt
                - AWSIAMS3User
                - Arn
      Bucket: !Ref AWSS3UploadCmsPrivBucket
  AWSS3ConsentsBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref ConsentsBucket
  AWSS3ConsentsBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: Give access to user
        Statement:
          - Sid: AllAccess
            Action:
              - 's3:*'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref AWSS3ConsentsBucket
            Principal:
              AWS: !GetAtt
                - AWSIAMS3User
                - Arn
      Bucket: !Ref AWSS3ConsentsBucket
  AWSIAMS3User:
    Type: 'AWS::IAM::User'
    Properties:
      LoginProfile:
        Password: !Ref IAMUserPassword
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: 's3:ListAllMyBuckets'
                Resource: '*'
              - Effect: Allow
                Action: 's3:*'
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref AppDeployBucket
                      - /*
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref AWSS3UploadBucket
                      - /*
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref AWSS3AttachmentBucket
                      - /*
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref AWSS3UploadCmsCertBucket
                      - /*
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref AWSS3UploadCmsPrivBucket
                      - /*
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref AWSS3ConsentsBucket
                      - /*
  AWSEBApplicationVersion:
    Type: 'AWS::ElasticBeanstalk::ApplicationVersion'
    Properties:
      ApplicationName: !Ref AWS::StackName
      Description: !Join
        - ' '
        - - !Ref 'AWS::StackName'
          - Initial Application Version
      SourceBundle:
        S3Bucket: !Ref AppDeployBucket
        S3Key: !Ref AppDeployFile
  AWSEBEnvironment:
    Type: 'AWS::ElasticBeanstalk::Environment'
    Properties:
      ApplicationName: !Ref AWS::StackName
      EnvironmentName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - !Ref AWSEBEnvironmentName
      Description: !Join
        - ' '
        - - !Ref 'AWS::StackName'
          - !Ref AWSEBEnvironmentName
          - Environment
      TemplateName: !Ref AWSEBConfigurationTemplate
      VersionLabel: !Ref AWSEBApplicationVersion
      Tier:
        Name: WebServer
        Type: Standard
  AWSEBConfigurationTemplate:
    Type: 'AWS::ElasticBeanstalk::ConfigurationTemplate'
    Properties:
      ApplicationName: !Ref AWS::StackName
      SolutionStackName: 64bit Amazon Linux 2016.09 v2.4.4 running Java 8
      Description: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - !Ref AWSEBEnvironmentName
          - AWS ElasticBeanstalk Configuration Template
      OptionSettings:
        - Namespace: 'aws:elasticbeanstalk:environment'
          OptionName: ServiceRole
          Value: !Ref AWSIAMServiceRole
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: IamInstanceProfile
          Value: !Ref AWSIAMInstanceProfile
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: InstanceType
          Value: !Ref InstanceType
        - Namespace: 'aws:autoscaling:updatepolicy:rollingupdate'
          OptionName: MaxBatchSize
          Value: 1
        - Namespace: 'aws:autoscaling:updatepolicy:rollingupdate'
          OptionName: MinInstancesInService
          Value: 1
        - Namespace: 'aws:autoscaling:updatepolicy:rollingupdate'
          OptionName: RollingUpdateEnabled
          Value: true
        - Namespace: 'aws:autoscaling:updatepolicy:rollingupdate'
          OptionName: RollingUpdateType
          Value: 'Health'
        - Namespace: 'aws:elasticbeanstalk:command'
          OptionName: DeploymentPolicy
          Value: 'RollingWithAdditionalBatch'
        - Namespace: 'aws:elasticbeanstalk:environment:process:default'
          OptionName: Protocol
          Value: 'HTTP'
        - Namespace: 'aws:elasticbeanstalk:environment:process:default'
          OptionName: HealthCheckPath
          Value: !Ref AppHealthcheckUrl
        - Namespace: 'aws:elasticbeanstalk:application'
          OptionName: Application Healthcheck URL
          Value: !Ref AppHealthcheckUrl
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: StreamLogs
          Value: 'true'
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: DeleteOnTerminate
          Value: 'true'
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: RetentionInDays
          Value: '7'
        - Namespace: 'aws:elasticbeanstalk:sns:topics'
          OptionName: Notification Endpoint
          Value: !Ref AwsEbNotificationEndpoint
        - Namespace: 'aws:elasticbeanstalk:hostmanager'
          OptionName: LogPublicationControl
          Value: true
        - Namespace: 'aws:elb:loadbalancer'
          OptionName: LoadBalancerHTTPPort
          Value: 80
        - Namespace: 'aws:elb:healthcheck'
          OptionName: Target
          Value: !Ref AppHealthcheckUrl
        - Namespace: 'aws:elb:listener:443'
          OptionName: ListenerProtocol
          Value: HTTPS
        - Namespace: 'aws:elb:listener:443'
          OptionName: InstanceProtocol
          Value: HTTP
        - Namespace: 'aws:elb:listener:443'
          OptionName: InstancePort
          Value: '80'
        - Namespace: 'aws:elb:listener:443'
          OptionName: SSLCertificateId
          Value: !Ref SSLCertArn
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: IAM_USER_PASSWORD
          Value: !Ref IAMUserPassword
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: APP_DEPLOY_BUCKET
          Value: !Ref AppDeployBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: APP_DEPLOY_FILE
          Value: !Ref AppDeployFile
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_EB_ENVIRONMENT_NAME
          Value: !Ref AWSEBEnvironmentName
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: BRIDGE_ENV
          Value: !Ref BridgeEnv
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: BRIDGE_USER
          Value: !Ref BridgeUser
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_KEY
          Value: !Ref AwsKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_SECRET_KEY
          Value: !Ref AwsSecretKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_SECRET_KEY_CONSENTS
          Value: !Ref AwsSecretKeyConsents
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_KEY_UPLOAD
          Value: !Ref AwsKeyUpload
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_SECRET_KEY_UPLOAD
          Value: !Ref AwsSecretKeyUpload
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_KEY_UPLOAD_CMS
          Value: !Ref AwsKeyUploadCms
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_SECRET_KEY_UPLOAD_CMS
          Value: !Ref AwsSecretKeyUploadCms
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: BRIDGE_HEALTHCODE_KEY
          Value: !Ref BridgeHealthcodeKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: BRIDGE_HEALTHCODE_REDIS_KEY
          Value: !Ref BridgeHealthcodeRedisKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: HOST_POSTFIX
          Value: !Ref HostPostfix
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: JAVA_OPTS
          Value: !Ref JavaOpts
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: NEW_RELIC_APP_NAME
          Value: !Ref NewRelicAppName
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: NEW_RELIC_LICENSE_KEY
          Value: !Ref NewRelicLicenseKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: NEW_RELIC_LOG
          Value: !Ref NewRelicLog
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: WEBSERVICES_URL
          Value: !Ref WebservicesUrl
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: UPLOAD_BUCKET
          Value: !Ref UploadBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: ATTACHMENT_BUCKET
          Value: !Ref AttachmentBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: UPLOAD_CMS_CERT_BUCKET
          Value: !Ref UploadCmsCertBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: UPLOAD_CMS_PRIV_BUCKET
          Value: !Ref UploadCmsPrivBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: CONSENTS_BUCKET
          Value: !Ref ConsentsBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: EMAIL_UNSUBSCRIBE_TOKEN
          Value: !Ref EmailUnsubscribeToken
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AUTH_CREATE_MYSQL_ACCOUNTS
          Value: !Ref AuthCreateMysqlAccounts
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AUTH_PROVIDER
          Value: !Ref AuthProvider
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: ENTERPRISE_STORMPATH_APPLICATION_HREF
          Value: !Ref EnterpriseStormpathHref
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: ENTERPRISE_STORMPATH_ID
          Value: !Ref EnterpriseStormpathId
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: ENTERPRISE_STORMPATH_SECRET
          Value: !Ref EnterpriseStormpathSecret
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: HIBERNATE_CONNECTION_PASSWORD
          Value: !Ref HibernateConnectionPassword
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: HIBERNATE_CONNECTION_URL
          Value: !Ref HibernateConnectionUrl
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: HIBERNATE_CONNECTION_USERNAME
          Value: !Ref HibernateConnectionUsername
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: HIBERNATE_CONNECTION_USESSL
          Value: !Ref HibernateConnectionUsessl
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: REDIS_URL
          Value: !Ref RedisUrl
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SNS_KEY
          Value: !Ref AwsSnsKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SNS_SECRET_KEY
          Value: !Ref AwsSnsSecretKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SYNAPSE_API_KEY
          Value: !Ref SynapseApiKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SYNAPSE_USER
          Value: !Ref SynapseUser
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SYSOPS_EMAIL
          Value: !Ref SysopsEmail
  AWSR53RecordSet:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneName: !Join
        - ''
        - - !Ref DNSDomain
          - .
      Comment: !Join
        - ' '
        - - !Ref 'AWS::StackName'
          - !Ref AWSEBEnvironmentName
      Name: !Join
        - ''
        - - !Ref DNSHostname
          - .
          - !Ref DNSDomain
          - .
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt
          - AWSEBEnvironment
          - EndpointURL
  AWSIAMServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - !Ref AWSEBEnvironmentName
          - service
          - role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - elasticbeanstalk.amazonaws.com
            Action:
              - 'sts:AssumeRole'
            Condition:
              StringEquals:
                sts:ExternalId: elasticbeanstalk
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth'
        - 'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService'
  AWSIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - !Ref AWSEBEnvironmentName
          - role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier'
  AWSIAMInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - !Ref AWSEBEnvironmentName
          - profile
      Path: /
      Roles:
        - !Ref AWSIAMRole
Description: AWS Elastic Beanstalk environment
Mappings:
  AWSLoadbalancerAccount:
    us-east-1:
      ARN: '127311923021'
    us-west-2:
      ARN: '797873946194'
    us-west-1:
      ARN: 027434742980
    eu-west-1:
      ARN: '156460612806'
    eu-central-1:
      ARN: 054676820928
    ap-southeast-1:
      ARN: '114774131450'
    ap-northeast-1:
      ARN: '582318560864'
    ap-southeast-2:
      ARN: '783225319266'
    ap-northeast-2:
      ARN: '600734575887'
    sa-east-1:
      ARN: '507241528517'
